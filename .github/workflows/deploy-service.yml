name: Deploy Service

on:
  push:
    branches: [main, staging, develop]
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        run: terraform -chdir=./terraform init -upgrade

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=./terraform apply -auto-approve -no-color -input=false -var environment=${{ github.ref_name }}

  build:
    name: 'Deploy Service to AKS'
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: 'efit-aks-rg'
          cluster-name: 'efit-aks'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run OP Helm NEEDS FIXING
        run: |
          helm upgrade -f ./helm/environments/${{ github.ref_name }}.values.yaml \
          --set azureSubId=${{ secrets.ARM_SUBSCRIPTION_ID }} \
          --install efit-web-release-${{ github.ref_name }} \
          ./helm
